{"spec": {"completion_fns": ["falcon-instruct:tiiuae/falcon-7b-instruct"], "eval_name": "utility_price_parsing.dev.v0", "base_eval": "utility_price_parsing", "split": "dev", "run_config": {"completion_fns": ["falcon-instruct:tiiuae/falcon-7b-instruct"], "eval_spec": {"cls": "evals.elsuite.basic.match:Match", "args": {"samples_jsonl": "utility_price_parsing/samples.jsonl"}, "key": "utility_price_parsing.dev.v0", "group": "utility_price_parsing"}, "seed": 20220722, "max_samples": null, "command": "./evaluate.py", "initial_settings": {"visible": true}}, "created_by": "", "run_id": "230626120025RCGAUGCR", "created_at": "2023-06-26 12:00:25.847920"}}
{"run_id": "230626120025RCGAUGCR", "event_id": 0, "sample_id": "utility_price_parsing.dev.9", "type": "match", "data": {"correct": false, "expected": "{'supply_cost_per_kwh': '0.04', 'delivery_cost_per_kwh': '0.01'}", "picked": null, "sampled": "// OCR utility bill text\nstring utilityBillText = ocrUtilityBillText_;\n\n// Read in cost of electricity supply in USD\ndouble supplyCostUSD = Double.Parse(valueUtilityBillText.Substring(0, UtilityBillText.IndexOf(\"Total Electric \")-1));\n\n// Read in decimal places of electricity supply cost\nstring supplyCostFormat = \"{0:N2}\";\n\n// Compute total delivery cost in USD\ndouble deliveryCostUSD = priceOfFuelTable.GetValue(1);\n\n// Read in decimal places of delivery cost\nstring deliveryCostFormat = \"{0:N2}\";\n\n// Combine utility and delivery costs into a single decimal number\ndecimal combinedCost = decimalUtilityBill.$12 + decimal(double(supply) $* decimal(delivery) $* valueUtilityBillText.Length) $0.4;\n\n// Convert from string to decimal\nstring combinedUtility = combinedCost.ToString();\n\n// Return the combined utility cost to JSON structure\ndecimal combinedUtilityInUSD = decimal(supplyCostUSD * priceOfFuelTable);\n\n// Join the two values with an 'N' separator\ndecimal combinedCombinedCost = decimal(decimalUtilityBill.$12 + $@\"{decimal(supply*decimal(delivery))}\") $* valueUtilityBillText.Length;\n\n// Return the combined utility cost in $US currency\nstring combinedUtilityInUSD = $\"{decimalCombinedCombinedCost:N}\";\n\n// Store the results in the `supplyCost` and `deliveryCost` variables\nstring supplyCost = $\"{supply}\";\nstring deliveryCost = supplyCost.$0*valueUtilityBillText.Length;\n\n// Perform calculations for the `costPerK", "prompt": [{"role": "system", "content": "You are a JSON utility that must return machine-readable JSON as output."}, {"role": "user", "content": "Your job is compute the cost per kWh of electricity supply (value must be a decimal rounded to 2 significant figures) and the cost per kWh of electricity delivery (value must be a decimal rounded to 2 significant figures) based on the following incomplete OCR reading from a user's utility bill. You are guaranteed to have the information needed to compute the desired values. Return in the following JSON format: {'supply_cost_per_kwh': '', 'delivery_cost_per_kwh': ''}. The following is information from the utility bill: \nElectricity Supply \n Electricity Supply 0.04 x 1000 kWh = 40.00 \n Total Electricity Supply $40.00 \n Delivery 0.01 x 1000 kWh 10.00 \n Total Delivery $10.00"}], "options": ["{'supply_cost_per_kwh': '0.04', 'delivery_cost_per_kwh': '0.01'}"]}, "created_by": "", "created_at": "2023-06-26 12:02:09.961860+00:00"}
{"final_report": {"accuracy": 0.0}}
